pipeline {
  agent { label 'docker' }
  options {
    timeout(time: 3, unit: 'HOURS')
  }
  stages {
    stage('Clean/Setup') {
      steps {
        sh 'git submodule update --init --recursive && make clean'
        sh 'make venv'
      }
    }
    stage('Test/Build/Lint') {
      steps {
        sh 'make all -j 3'
        lock ('manubot') {
          sh 'make output/manuscript.html'
        }
        archiveArtifacts artifacts: 'output/*.svg, output/manuscript.docx', onlyIfSuccessful: true
        //cobertura coberturaReportFile: 'coverage.xml', failUnhealthy: false, failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
        recordIssues qualityGates: [[threshold: 20, type: 'TOTAL', unstable: true]], tools: [pyLint(pattern: 'pylint.log')]
        publishHTML([allowMissing:false, alwaysLinkToLastBuild:false, keepAll:true, reportDir:'output', reportFiles:'manuscript.html', reportName:'Manuscript'])
      }
    }
  }
  post {
    always {
      //junit allowEmptyResults: true, testResults: 'junit.xml'
      cleanWs cleanWhenFailure: false, cleanWhenNotBuilt: false, cleanWhenUnstable: false
    }
  }
}
